#BlueJ class context
comment0.target=Character
comment0.text=\r\n\ Character\ class\ for\ player\ 1.\ \r\n\ \r\n\ @author\ (your\ name)\ \r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=game
comment1.target=Character(int)
comment1.text=\r\n\ Act\ -\ do\ whatever\ the\ Character\ wants\ to\ do.\ This\ method\ is\ called\ whenever\r\n\ the\ 'Act'\ or\ 'Run'\ button\ gets\ pressed\ in\ the\ environment.\r\n
comment10.params=
comment10.target=void\ punching()
comment10.text=\r\n\ Punching\ method.\ If\ the\ character\ is\ clicking\ the\ punch\ button,\ it\ sets\ the\ "punched"\ boolean\ for\ subclasses\ to\ know\ to\ animate\ the\ character.\r\n\ Also\ checks\ if\ character\ is\ punching,\ while\ touching\ Character\ Two.\ If\ so,\ player\ twos\ health\ decreases.\ Player\ two's\ health\ is\ accessed\ in\ another\ method\r\n\ by\ getting\ their\ healthbar.\ If\ player\ two's\ health\ is\ <\=\ 0,\ player\ One\ wins.\r\n\ Also\ checks\ if\ character\ is\ punching\ but\ player\ two\ is\ blocking,\ which\ causes\ less\ health\ to\ be\ taken\ off.\ \r\n
comment11.params=
comment11.target=void\ kicking()
comment11.text=\r\n\ same\ as\ punching\ but\ with\ kicking\r\n
comment12.params=
comment12.target=int\ flipped()
comment12.text=\r\n\ This\ method\ checks\ if\ the\ two\ players\ cross\ each\ other.\ If\ they\ do,\ it\ returns\ a\ value\ of\ 0\ or\ 1.\ This\ value\ can\ be\ used\ by\ subclasses\ to\ determine\ \r\n\ whether\ to\ setImage\ to\ the\ original\ image\ or\ the\ reversed\ image\r\n
comment13.params=
comment13.target=void\ dead()
comment13.text=\r\n\ this\ method\ checks\ if\ player\ one\ is\ dead,\ so\ the\ subclasses\ can\ see\ whether\ or\ not\ to\ animate\ their\ death\r\n
comment14.params=
comment14.target=void\ gameoverText()
comment15.params=
comment15.target=boolean\ returnBlocked()
comment16.params=
comment16.target=void\ getPlayerTwoHealthBar()
comment16.text=\r\n\ gets\ players\ two\ health\ bar\ so\ this\ class\ can\ call\ their\ lose\ health\ meathod\r\n
comment17.params=
comment17.target=void\ getPlayerOneHealthBar()
comment18.params=
comment18.target=boolean\ checkBlocked()
comment18.text=\r\n\ accesses\ CharacterTwo\ class\ and\ check\ if\ they\ are\ blocking\r\n
comment19.params=
comment19.target=void\ jumpTimer()
comment19.text=\r\n\ In\ place\ so\ user\ cannot\ spam\ the\ jump\r\n
comment2.params=
comment2.target=void\ act()
comment20.params=
comment20.target=void\ punchTimer()
comment20.text=\r\n\ In\ place\ so\ user\ cannot\ spam\ the\ jump\r\n
comment21.params=input
comment21.target=void\ output(java.lang.String)
comment22.params=
comment22.target=void\ kickTimer()
comment22.text=\r\n\ In\ place\ so\ user\ cannot\ spam\ the\ jump\r\n
comment3.params=
comment3.target=void\ movement()
comment3.text=\r\n\ controls\ left\ and\ right\ movement\ of\ the\ character.\ Also\ sets\ the\ "walked"\ boolean\ to\ true\ so\ it\ can\ be\ accessed\ from\ subclasses\ to\ determine\ whether\ to\ \r\n\ animate\ the\ character\ to\ walk\r\n
comment4.params=
comment4.target=void\ fall()
comment5.params=
comment5.target=void\ jumping()
comment5.text=\r\n\ controls\ the\ jumping\ of\ a\ character.\ Also\ sets\ the\ "jumped"\ boolean\ to\ true\ so\ subclasses\ can\ determine\ whether\ to\ animate\ the\ jump\r\n
comment6.params=
comment6.target=int\ gravity()
comment7.params=
comment7.target=void\ isTouching()
comment7.text=\r\n\ checks\ if\ the\ character\ is\ touching\ the\ platform\r\n
comment8.params=
comment8.target=void\ crouching()
comment8.text=\r\n\ checks\ if\ user\ is\ clicking\ the\ crouch\ button.\ also\ sets\ "crouched"\ boolean\ to\ true\ so\ subclasses\ can\ determine\ whether\ to\ animate\ the\ crouch\r\n
comment9.params=
comment9.target=void\ blocking()
comment9.text=\r\n\ checks\ if\ user\ is\ clicking\ the\ block\ button.\ also\ sets\ "crouched"\ boolean\ to\ true\ so\ subclasses\ can\ determine\ whether\ to\ animate\ the\ crouch\r\n
numComments=23
